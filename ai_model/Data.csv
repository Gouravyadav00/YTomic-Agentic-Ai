0,1,2,3
[00:00] hello everyone welcome back so in this,,,
[00:03] project we're going to build AI powered,,,
[00:05] water tracking app using fast API Lang,,,
[00:08] chain and streamlet so the goal was to,,,
[00:11] help users track their daily water,,,
[00:13] intake while getting intelligent,,,
[00:15] feedback from AI assistant so in this,,,
[00:18] project uh we're going to build a back,,,
[00:20] end with a fast API that logs water,,,
[00:23] intake and stores it in a sqlite,,,
[00:26] database so then we have integrated that,,,
[00:29] with the B chain uh that is an open AI,,,
[00:32] to generate a personalized hydration,,,
[00:34] feedback based on how much water the,,,
[00:36] user has consumed so to make it user,,,
[00:39] friendly so we have designed a clean,,,
[00:41] streamlit dashboard where users can log,,,
[00:44] their intake view of their history and,,,
[00:46] even see the visual charts as well so,,,
[00:48] let's start building this,,,
[00:51] project all right so let's start,,,
[00:52] building our project so first step let's,,,
[00:54] go and create empty folder for this,,,
[00:57] project I'll go here let me just go and,,,
[01:00] create and name this folder as uh,,,
[01:06] uron uh water,,,
[01:14] intake uh uron water tracker,,,
[01:18] okay uron water,,,
[01:24] tracker all right so let me just get,,,
[01:27] into this particular folder and right,,,
[01:29] now it's completely blank okay so in,,,
[01:31] this project I'll be using AA uh to,,,
[01:34] create an environments so in case if you,,,
[01:36] don't have K just go and install it from,,,
[01:38] the Chrome uh uh you need to install uh,,,
[01:41] anakonda Navigator so if you install,,,
[01:44] anakonda Navigator so once you're done,,,
[01:46] with anakonda installation you can just,,,
[01:48] go and search your anakonda prompt and,,,
[01:50] from here you can just uh create an,,,
[01:51] environments right so in case if you are,,,
[01:54] not familiar with anakonda and just use,,,
[01:56] uh python VV module to create an,,,
[01:58] environments,,,
[02:00] so if you're following along so I'll be,,,
[02:02] using a k to create an environment so,,,
[02:04] right now the the folder is blank let me,,,
[02:06] just go and open the vs code in the same,,,
[02:09] folder uh so to do that let me just open,,,
[02:12] the,,,
[02:14] anakonda anakonda,,,
[02:20] prompt and let me just copy this path,,,
[02:23] over,,,
[02:24] here and let's do CD into,,,
[02:27] this and type code code dot so codee dot,,,
[02:32] basically opens,,,
[02:34] the uh vs code uh in the same folder let,,,
[02:38] me just expand,,,
[02:45] that all right so here so I have just,,,
[02:48] opened the vs code in the same folder in,,,
[02:50] the uron water tracker so let me just go,,,
[02:53] to terminal and click on new,,,
[02:56] terminal and here let me just open the,,,
[02:59] command prompt okay so right now I'm,,,
[03:01] inside the base environment so let's,,,
[03:03] create an environment to create,,,
[03:04] environment I'll type K,,,
[03:06] create K create hyphen hyphen name and,,,
[03:11] the name of the environment I'll just,,,
[03:12] give uh euron,,,
[03:16] AI tracker your on water,,,
[03:24] tracker you're on order tracker and here,,,
[03:28] let me just give the python version so,,,
[03:30] I'll be using 3.10 for this project and,,,
[03:43] enter and let me just give i,,,
[03:58] s all right so now the next step let's,,,
[04:01] activate this environment so right now,,,
[04:03] I'm in the base environment to activate,,,
[04:05] I'll just type here K,,,
[04:07] activate and the environment name okay,,,
[04:10] the environment name I have given,,,
[04:12] as uh,,,
[04:17] uron you're on uh water,,,
[04:21] tracker and do,,,
[04:26] enter all right so the next step uh let,,,
[04:29] me just uh add a very important file,,,
[04:33] that isv which help us to store the open,,,
[04:36] API keys so let me just type here do,,,
[04:40] EnV and inside the EnV let me just paste,,,
[04:45] the open API,,,
[04:49] key I have the open API key let me just,,,
[04:51] paste,,,
[04:54] that and before that so even I need a,,,
[04:57] database URL uh will be be uh storing a,,,
[05:01] data inside the database as well right,,,
[05:04] so we'll have the two keys one is the,,,
[05:06] database URL so this will be my database,,,
[05:10] URL that is SQL,,,
[05:15] light so this is a default one okay uh,,,
[05:19] SQL light and the database URL I'll just,,,
[05:22] give as water tracker DB water,,,
[05:26] tracker.,,,
[05:28] DB water tracker. TP and let me just,,,
[05:31] paste this your uh open API key over,,,
[05:37] here okay so inside this EnV so we have,,,
[05:40] two uh information one is the open API,,,
[05:43] key and the next is the database URL,,,
[05:45] which is sqlite water tracker DB okay,,,
[05:48] let me just copy and paste this and save,,,
[05:50] all right so next is uh requirements.txt,,,
[05:53] uh to install the dependencies for our,,,
[05:56] Pro uh project req,,,
[05:58] [Music],,,
[06:00] Ur r i m n TS,,,
[06:08] requirements.txt,,,
[06:12] okay so I have the list of environments,,,
[06:15] let me just copy and paste,,,
[06:28] it right and let's install this,,,
[06:32] dependencies so make sure to just do the,,,
[06:34] save contrl s okay to install these,,,
[06:38] dependencies we need to type pip install,,,
[06:40] hyphen R so pip uh,,,
[06:44] install hyphen,,,
[06:49] R,,,
[06:50] requirements.txt and do,,,
[06:58] enter e,,,
[07:30] so it's installing all the dependencies,,,
[07:32] so let's wait,,,
[08:26] so make sure installs dependencies in,,,
[08:28] the uh n,,,
[08:58] okay for,,,
[09:37] so it will take few,,,
[09:41] minutes all right so this is done so the,,,
[09:43] next step let's create a folder and here,,,
[09:47] I'll just create a folder called SRC,,,
[09:48] where I'll keep all my code files so,,,
[09:51] inside the SRC the first uh the script,,,
[09:53] we're going to write is for the logging,,,
[09:55] okay so I'll type here,,,
[09:57] logger Dot,,,
[10:01] py okay let me just set up the loging so,,,
[10:07] import import,,,
[10:10] loging and here let me just type,,,
[10:16] loging uh,,,
[10:21] loging,,,
[10:22] dot basic,,,
[10:25] config basic config,,,
[10:31] uh basic config and here I need to,,,
[10:33] provide the file,,,
[10:36] name uh file name I'll just give as app.,,,
[10:42] log uh next I need to provide the level,,,
[10:46] and the level will be,,,
[10:49] loging,,,
[10:51] doino loging do info so next the,,,
[10:56] format uh here the format will b c,,,
[11:03] percentage or we'll have the,,,
[11:06] time ask it time,,,
[11:09] string and,,,
[11:11] percentage will have the level,,,
[11:14] name level name,,,
[11:35] uh okay ask itm hyphen level,,,
[11:48] name and percentage,,,
[11:52] message okay so this will be our uh,,,
[11:55] format uh to add the logs within the,,,
[11:58] app.py,,,
[12:00] uh next let's define the method so DF,,,
[12:04] log message,,,
[12:07] logor message and this method will take,,,
[12:11] a,,,
[12:12] message and just log that information,,,
[12:15] that is,,,
[12:17] logging loging,,,
[12:21] doino logging do info and the message,,,
[12:25] will be,,,
[12:26] loged okay similarly let's even add one,,,
[12:28] more method for for the error so log,,,
[12:33] error log error so it will take the,,,
[12:36] error here and uh we'll add the,,,
[12:40] logging do,,,
[12:43] error and we're going to pass the error,,,
[12:45] over,,,
[12:49] here e r r o r all right so this is uh,,,
[12:53] the logging script okay so where we are,,,
[12:55] just uh setting up the logging process,,,
[12:58] for a project so it's a basic config and,,,
[13:00] the file name will be app. log and the,,,
[13:02] level is logging doino this is what the,,,
[13:04] format so once we start running the,,,
[13:06] project this is uh the log information,,,
[13:08] will be logged inside the app. uh log so,,,
[13:11] this is the two methods we have defined,,,
[13:13] one is the log message and the log error,,,
[13:15] all right so next let me just create one,,,
[13:17] more script I'll just name this script,,,
[13:19] as,,,
[13:21] agent. py,,,
[13:30] agent. py let me,,,
[13:38] just all right so next is agent. py okay,,,
[13:41] so let me just Define,,,
[13:45] this uh here so first let me just write,,,
[13:49] import,,,
[13:50] OS and from Lang,,,
[13:55] chain from Lang chain open AI,,,
[13:59] uh,,,
[14:01] import uh chat C's Capital uh open,,,
[14:07] AI uh then from Lang,,,
[14:13] chain from the Lang chain.,,,
[14:18] schema schema uh,,,
[14:21] import human,,,
[14:25] message human message and,,,
[14:29] from uh,,,
[14:31] dot,,,
[14:33] EnV uh,,,
[14:35] import load. EnV over here okay so here,,,
[14:39] what we're doing so we're importing all,,,
[14:41] the necessary uh components here right,,,
[14:43] so first we are importing OS which,,,
[14:46] basically help us to access the,,,
[14:48] environment variables so then we're,,,
[14:50] importing the chat open a which is a,,,
[14:52] lang chain wrapper for the open AI GPD,,,
[14:54] model next we have the message or human,,,
[14:57] message which is used to structure the,,,
[14:59] the prompts or the messages to the last,,,
[15:01] language model and finally we have the,,,
[15:04] uh load. EnV which basically help us to,,,
[15:07] load the environment variable which are,,,
[15:08] kept inside the EnV here okay next step,,,
[15:12] is to load that API key uh so for that,,,
[15:15] we need to first uh initialize that is,,,
[15:18] load.,,,
[15:20] EnV and here let's create a variable,,,
[15:23] called open,,,
[15:26] AI API key so this will uh so I'll be,,,
[15:31] storing this from OS,,,
[15:33] do uh,,,
[15:36] getv get EnV and let me just get that,,,
[15:39] from the EnV file so and the name of the,,,
[15:42] variable is,,,
[15:43] open uh AI open AI API so this is what,,,
[15:48] the name we have set inside,,,
[15:50] Dov all right okay so next step uh is to,,,
[15:53] initialize the large language model so,,,
[15:56] let me just create a llm and here let,,,
[15:59] just call this chat open AI uh so where,,,
[16:01] I need to pass three things okay one is,,,
[16:03] the API key so I'll just call this as,,,
[16:06] API key uh what is API key it's open or,,,
[16:10] uh API key and then next try to pass the,,,
[16:13] model so model is I'll be using GPT 4,,,
[16:17] GPT,,,
[16:19] 4 uh next is,,,
[16:25] temperature temperature and the,,,
[16:27] temperature I set to5 five okay so this,,,
[16:29] is just a Randomness so next let me just,,,
[16:32] Define uh a class,,,
[16:35] here so now let's define uh water intake,,,
[16:39] uh agent okay so water intake class okay,,,
[16:42] so which will basically keep track of,,,
[16:43] that uh so let me just write on so,,,
[16:47] class I'll name this class as,,,
[16:55] water as water intake,,,
[17:01] water intake,,,
[17:06] agent okay so this class basically help,,,
[17:09] us to track and suggest the daily water,,,
[17:11] intake okay so the main core will add,,,
[17:13] inside this particular class so here let,,,
[17:16] me just Define The Constructor so DF,,,
[17:18] uncore uncore netcore uncore and here,,,
[17:21] let me just pass the,,,
[17:23] self uh so self.,,,
[17:27] history I'll explain okay once I type,,,
[17:29] I'll explain so history h s t o r y,,,
[17:34] history all right and let me just Define,,,
[17:37] one more method I'll just name this,,,
[17:39] method as,,,
[17:44] analyze analyze,,,
[17:46] intake analyze intake so it will take,,,
[17:49] the self and uh intake,,,
[17:53] ml intake uh,,,
[17:56] ML and here I need to provide a,,,
[18:06] prompt here I'll providing the,,,
[18:11] prompt uh let me just write down the,,,
[18:13] prompt here so,,,
[18:15] you are a,,,
[18:17] hydration Hy d a d hydration,,,
[18:24] assistant hide in assistant the user has,,,
[18:30] consumed uh,,,
[18:32] consumed uh here I'll take that intake,,,
[18:36] ml user has consumed this many mL of,,,
[18:41] water,,,
[18:44] today,,,
[18:46] provide uh,,,
[18:49] hydration status and,,,
[18:55] suggest status and S,,,
[18:59] just uh if they need to,,,
[19:03] drink uh more,,,
[19:06] water all right so this will be my,,,
[19:08] prompt and let me just close,,,
[19:10] this and so I'll be getting a response,,,
[19:13] from the llm RB,,,
[19:17] n uh response and I'll be getting that,,,
[19:20] from llm do,,,
[19:24] invoke uh here I'll be invoking that,,,
[19:27] prompt right so here here I'll be using,,,
[19:29] this uh human message and here I need to,,,
[19:32] pass the,,,
[19:34] content and that content is nothing but,,,
[19:37] a,,,
[19:39] prompt okay and finally I'm going to,,,
[19:42] return the,,,
[19:50] response uh return the,,,
[19:53] response.,,,
[19:57] content fine so here uh so uh let's test,,,
[20:01] this okay so let me just test this like,,,
[20:06] if uh underscore uncore name underscore,,,
[20:09] uncore is equal to equal to underscore,,,
[20:14] uncore maincore underscore and here I,,,
[20:17] need to pass the I need to First Call,,,
[20:20] that that is water intake water intake,,,
[20:23] agent and here uh let me just pass the,,,
[20:27] parameters like I need to pass the,,,
[20:28] intake over here uh intake intake I'll,,,
[20:32] pass 500,,,
[20:34] mL uh or,,,
[20:37] 1,500 and next I to pass the,,
[20:42] feedback uh so here uh basically I'll be,,,
[20:44] getting a feedback from the uh agent,,,
[20:46] after calling that analyze intake method,,,
[20:49] right so this is what we need to pass,,,
[20:51] okay intake,,,
[20:54] ml uh so here uh feedback I'll be,,,
[20:58] getting of after invoking this response,,,
[21:01] so I'll just call that agent do analyze,,,
[21:05] intake and I'll just pass that,,,
[21:08] intake intake over,,,
[21:13] here okay and uh so let me just print,,,
[21:16] that okay so,,,
[21:19] print uh,,,
[21:21] hydration hydration,,,
[21:25] analyze and here I'll be just pass the,,,
[21:29] uh,,,
[21:32] feedback okay and save this fine let me,,,
[21:35] just test this script okay if everything,,,
[21:37] is working,,,
[21:46] fine so here if I just do,,,
[21:50] python uh agent.,,,
[21:56] py yeah it's inside this SCE right so,,,
[21:59] I'll just type here python SRC,,,
[22:02] SL agent.,,,
[22:08] py okay,,,
[22:11] no blank chain we have installed,,,
[22:21] it line chain,,,
[22:28] no mod deal so what we have here so Lang,,,
[22:31] chain open AI Lang,,,
[22:34] chain score open AI import CH this is,,,
[22:39] [Music],,,
[22:41] correct okay let's try to install this,,,
[22:44] we need to install this open here just a,,,
[22:46] second,,,
[22:58] [Music],,,
[23:10] let's install this uh pip,,,
[23:18] install uh pip install Lang,,,
[23:26] chain and L chin,,,
[23:47] all right so now let's rerun this,,,
[24:02] yeah so you can see I got an hydration,,,
[24:04] analysis uh so it's telling that uh your,,,
[24:07] current hydration status is uh moderate,,,
[24:11] correct it's a moderate uh because the,,,
[24:13] input have given as 1,500,,
[24:17] ml so your current hydration status is,,,
[24:19] moded the recommended daily water intake,,,
[24:21] is about 2,00 to 2,500 ml for women and,
[24:26] 2,500 to 3,00 uh 3,700 ml for men okay
[24:30] so based on current consumption you,,,
[24:32] should drink more water to meet the,,,
[24:33] recommended daily intake fine so now,,,
[24:36] let's try to log this uh sorry uh uh,,,
[24:39] we'll store this water intake uh so if I,,,
[24:42] just go and check in log is not created,,,
[24:44] okay so even we can just store this,,,
[24:46] information inside our SQL light okay,,,
[24:48] for the data storage so let me just go,,,
[24:50] and create a script called database. py,,,
[24:53] uh so let me just do that so here inside,,,
[24:57] the,,,
[24:59] SRC let me just create a new file I'll,,,
[25:02] just name this file as,,,
[25:05] database dot,,,
[25:14] py okay so here first let me,,,
[25:18] import uh SQL light,,,
[25:28] sqlite 3 okay and uh even let's import,,,
[25:32] date time so from uh date,,,
[25:36] time uh,,,
[25:39] import uh,,,
[25:41] import or date time okay and let's give,,,
[25:45] the DB name uh so database name I'll,,,
[25:49] just name the database name as water,,,
[25:52] inch DB even that's also defined inside,,,
[25:54] the EnV file right so I'll name this as,,,
[25:57] water tracker water,,,
[26:00] tracker do,,,
[26:02] DB all right so now let's define the,,,
[26:05] different methods okay first to create,,,
[26:07] tables then uh we'll create a a file to,,,
[26:11] uh then we'll create a method to log the,,,
[26:13] intake then get the intake history as,,,
[26:16] well okay let's try to do,,,
[26:24] that so let me just Define,,,
[26:29] uh create,,,
[26:33] table just,,,
[26:47] a uh so create tables and here let me,,,
[26:51] just Define the all the connection,,,
[26:53] parameter so first is I need to set up,,,
[26:56] the connection that is uh seq light I'll,,,
[26:59] just call that sqlite 3 and click on and,,,
[27:02] do hit sorry do connect and I want to,,,
[27:05] connect to the DB name okay this is the,,,
[27:07] database I want to connect it so once we,,,
[27:09] create a,,,
[27:11] database uh so let's set up the,,,
[27:16] cursor set up the cursor and the cursor,,,
[27:19] will point so cursor is basically a,,,
[27:21] pointer so let me just take that,,,
[27:22] connection and create a cursor object,,,
[27:25] okay cursor fine so first let me just uh,,,
[27:29] create a table so here so cursor.,,,
[27:32] execute cursor. execute and let me just,,,
[27:35] give,,,
[27:37] that uh create table command that is let,,,
[27:41] me just close,,,
[27:43] this,,,
[27:48] execute uh create table see R create uh,,,
[27:53] table uh if not exist,,,
[28:01] mod exist I'll create a table called,,,
[28:03] water,,,
[28:05] intake water intake and here it,,,
[28:10] will uh,,,
[28:12] take uh four columns so first is the,,,
[28:19] ID of the type,,,
[28:22] integer of the type integer and even,,,
[28:25] let's set this to a primary key,,,
[28:28] with auto,,,
[28:36] increment Auto increment okay so next is,,,
[28:38] the user,,,
[28:45] ID and of the type uh,,,
[28:49] text uh next let's take the intake ml,,,
[28:53] intake uncore mL of the type integer,,,
[28:59] and one last is the date okay so date,,,
[29:02] will be of text fine date time also you,,,
[29:04] can take it okay fine let me just save,,,
[29:07] this okay so this is just for creation,,,
[29:09] of table and finally we need to commit,,,
[29:11] this that is uh so CNN connection do,,,
[29:16] commit okay and even we need to close,,,
[29:18] this connection do,,,
[29:23] close Dot,,,
[29:25] close all right so the next next uh let,,,
[29:29] me just take the log intake,,,
[29:32] method one more method let me just save,,,
[29:34] this,,,
[29:36] okay fine let me Define one more method,,,
[29:39] so DF a log uh,,,
[29:44] intake so it will take the user,,,
[29:47] ID and uh intake,,,
[29:50] ml okay intake ML and here so let me,,,
[29:55] just Define the same thing that is a,,,
[29:56] connection equals to to uh sqlite 3.,,,
[30:00] connect so connect to the database that,,,
[30:04] is the TB name which have defined uh,,,
[30:06] then uh the connection cursor,,,
[30:10] Cu uh c r s cursor so they will take,,,
[30:14] that,,,
[30:15] connection do,,,
[30:19] cursor,,,
[30:23] cursor okay and here uh the log intake,,,
[30:26] okay so here we basically uh saving the,,,
[30:29] information about uh the user ID and uh,,,
[30:33] the amount of water they are uh uh,,,
[30:36] intake okay the intake amount okay,,,
[30:38] intake um uh how much how much of water,,,
[30:41] they have intake okay so we we are just,,,
[30:43] taking that information so here for that,,,
[30:45] we need uh the information about the,,,
[30:47] date also I'll type here date,,,
[30:50] today uh date today so I'll take this,,,
[30:53] date time uh dot today Dot today and so,,,
[30:59] we'll have the format let me just,,,
[31:01] convert that into St,,,
[31:03] Str,,,
[31:04] frame okay and the format for this will,,,
[31:08] be percentage,,,
[31:11] year uh it's year month and day,,,
[31:15] year uh,,,
[31:17] month and percentage,,,
[31:24] day all right so next uh C us er.,,,
[31:30] execute execute uh so here let's do the,,,
[31:34] insert,,,
[31:40] into insert into insert into the table,,,
[31:43] which we have created that is a water,,,
[31:46] intake water intake and here I want to,,,
[31:49] do the insert for user,,,
[31:51] ID and uh intake,,,
[31:56] ml intake _ ML and the date and the date,,,
[32:02] and what are the values so values let me,,,
[32:04] just set so values so here right now,,,
[32:08] I'll just give uh this question mark,,,
[32:12] okay because when we end when we will,,,
[32:14] try to add this when we set up the UI,,,
[32:16] okay so let me just set up some question,,,
[32:18] marks,,,
[32:21] here okay and uh,,,
[32:30] yeah insert into this question mark and,,,
[32:33] finally we're going to write uh this,,,
[32:35] that,,,
[32:37] is uh,,,
[32:39] user user ID correct so first is user ID,,,
[32:43] then,,,
[32:44] intake,,,
[32:47] ml intake ML and the date today and date,,,
[32:51] today,,,
[32:58] okay and finally we going to commit that,,,
[33:01] that is connection.,,,
[33:05] commit and finally even will close this,,,
[33:08] connection Dot,,,
[33:12] close fine uh so similarly let me just,,,
[33:15] Define one more let me just copy the,,,
[33:17] same thing okay and let's modify it one,,,
[33:20] last method and this method will be get,,,
[33:22] intake history,,,
[33:25] okay uh so so,,,
[33:32] [Music],,,
[33:35] get uh get uh intake,,,
[33:47] history intake history and here I just,,,
[33:49] to pass the user ID that's,,,
[33:53] it okay so get uh intake history I'll,,,
[33:56] pass the user ID so this will remain,,,
[33:58] same the connection do cursor and here,,,
[34:01] we don't need this now date,,,
[34:05] today okay uh so no date today so here,,,
[34:09] we'll do a select instead of,,,
[34:14] this instead of this we going to write,,,
[34:20] it uh,,,
[34:24] select uh intake intake and,,,
[34:29] ML and a date uh,,,
[34:34] from water,,,
[34:40] intake water,,,
[34:44] intake,,,
[34:46] where user ID where user,,,
[34:50] ID is equal,,,
[34:53] to question,,,
[34:55] mark and that I'm going to pass as a,,,
[34:58] user ID wait so I'll type here user,,,
[35:04] ID all right so next uh the fetch all,,,
[35:08] because this is the history right so,,,
[35:10] here I'll just store that inside the,,,
[35:14] cords uh,,,
[35:20] Records I'll take the,,,
[35:23] cursor dot fetch all fetch all that's it,,,
[35:28] okay and connection do close and uh will,,,
[35:31] not do commit so here we'll have the,,,
[35:34] close and finally return the,,,
[35:38] records return the records fine and here,,,
[35:42] finally we'll we need to uh call this,,,
[35:46] create tables okay because basically we,,,
[35:48] need to initialize the database okay,,,
[35:51] create,,,
[35:52] tables all right so this is done let me,,,
[35:54] just save this and run the script okay,,,
[35:56] just see if you have any any errors that,,,
[35:58] is uh to run this,,,
[36:00] python uh it's inside the,,,
[36:07] SRC python,,,
[36:13] SRC database,,,
[36:19] dopy okay so you can see,,,
[36:21] waterb do created okay so we have the,,,
[36:24] name and the uh we have uh water intake,,,
[36:27] we have ID user ID intake and the date,,,
[36:29] okay so it's absolutely working fine all,,,
[36:32] right uh so the next uh is uh API we,,,
[36:36] need to set up our backend API let me,,,
[36:38] just do that quickly so let me just go,,,
[36:40] and create a new file inside SRC and,,,
[36:43] I'll just name this as,,,
[36:45] api.,,,
[36:48] py API,,,
[36:56] dopy all right so here first is all,,,
[36:59] about importing it that is from Fast,,,
[37:03] API uh,,,
[37:04] import,,,
[37:06] import fast,,,
[37:09] API then from,,,
[37:16] pantic from pantic uh import base,,,
[37:22] model import base,,,
[37:25] model uh then now let's import this,,,
[37:28] agent database as well as logger so from,,,
[37:32] SRC do agent uh,,,
[37:36] import uh the method we have defined,,,
[37:38] there is water intake,,,
[37:40] agent next uh from,,,
[37:44] SRC do uh database uh import uh,,,
[37:49] import log intake as well as uh get uh,,,
[37:53] intake,,,
[37:55] history okay and from,,,
[37:59] SRC do,,,
[38:00] loger uh,,,
[38:02] import log,,,
[38:06] message all right so here we just,,,
[38:09] imported all the necessary modules which,,,
[38:11] we have defined here okay so now let me,,,
[38:13] just initialize that is app uh fast API,,,
[38:17] let me just initialize this and even,,,
[38:19] let's initialize this agent uh water,,,
[38:22] intake also okay so agent is equal to uh,,,
[38:27] water intake,,,
[38:29] agent F so I've just created an object,,,
[38:32] of called agent and we have just inside,,,
[38:34] this particular uh water intake agent so,,,
[38:37] inside the agent we have just,,,
[38:39] initialized this uh water intake,,,
[38:43] okay equals,,,
[38:47] to all right so here using that uh pent,,,
[38:51] that is a base model okay let's try to,,,
[38:52] inherit uh the properties of the water,,,
[38:55] intake uh,,,
[38:58] okay so here we'll define a class called,,,
[39:01] uh water intake request okay water,,,
[39:05] intake,,,
[39:07] request request and this will inherit uh,,,
[39:11] the properties from the base model okay,,,
[39:13] so we call this as a pantic okay and,,,
[39:15] here uh it's basically how the user will,,,
[39:18] pass the information okay user ID of the,,,
[39:20] type uh St strr of the type St Str and,,,
[39:24] here the intake ml,,,
[39:31] uh the intake mL of the type,,,
[39:35] integer all,,,
[39:37] right so now finally we need to define,,,
[39:40] the routes so first app do post post,,,
[39:45] request and here let me just create a a,,,
[39:50] route called log hyphen,,,
[39:54] intake uh intake,,,
[40:01] inake and so let me just Define the,,,
[40:06] method a sync uh,,,
[40:10] DF a,,,
[40:13] log water,,,
[40:17] intake intake and here let me just call,,,
[40:21] this,,,
[40:22] request so the request will be for the,,,
[40:25] water intake request okay okay water,,,
[40:28] intake request the class which have,,,
[40:30] defined on the,,,
[40:31] top okay and here so let's create a,,,
[40:37] variable called log,,,
[40:39] intake sorry I'm just uh calling that,,,
[40:42] log intake okay so where I need to Pro,,,
[40:44] from the user I'll be taking the user ID,,,
[40:47] so request,,,
[40:50] dot uh user ID,,,
[40:54] user user ID,,,
[40:58] and,,,
[41:01] request do intake,,,
[41:05] ML and let's create a variable called,,,
[41:13] analyze analyze and,,,
[41:16] here I'll take the agent do analyze,,,
[41:19] intake which we have defined the method,,,
[41:22] and I need to pass the request do intake,,,
[41:26] ml request dot so here we're just,,,
[41:29] connecting the dots okay that's it,,,
[41:31] whatever we have just uh executed,,,
[41:32] separately and finally we go log the,,,
[41:34] message so log,,,
[41:39] message log message and the message will,,,
[41:43] be like this okay like a,,,
[41:48] user or,,,
[41:51] request do user,,,
[41:54] ID request. user ID,,,
[42:02] logged or,,,
[42:05] request request do intake,,,
[42:14] ml okay so this will be by,,,
[42:17] message and finally we going to return,,,
[42:21] uh,,,
[42:23] return uh,,,
[42:25] message return on the,,,
[42:28] message and the message will be like,,,
[42:32] water uh,,,
[42:35] intake logged successfully,,,
[42:41] logged logged,,,
[42:47] successfully and even the analysis also,,,
[42:50] ly SS analysis and that I'll be getting,,,
[42:54] it from analysis,,,
[43:00] all right so this is for the slash inch,,,
[43:02] now even we have to Define for the in L,,,
[43:06] say okay so even we need to Define this,,,
[43:08] route for the uh history also right so,,,
[43:10] let me just write down that so atate app,,,
[43:15] dot get this will be get,,,
[43:18] request and here I need to pass the uh,,,
[43:22] Slash,,,
[43:24] history uh history uh uh Slash uh user,,,
[43:29] ID user _,,,
[43:35] ID a,,,
[43:37] sync uh let me create a method called,,,
[43:40] get water,,,
[43:46] history Add Water,,,
[43:49] [Music],,,
[43:53] history okay so it will take the user ID,,,
[43:58] of the type St,,,
[44:00] Str uh so here we need to just retrieve,,,
[44:03] all the all the information about the,,,
[44:05] user water intake history correct let me,,,
[44:08] just create a variable called,,,
[44:11] history uh history and so I'll just get,,,
[44:14] that uh get uh intake history and I'll,,,
[44:18] pass the user ID that's it user _ ID,,,
[44:22] user uncore ID and finally we're going,,,
[44:24] to return that so return,,,
[44:28] uh return the uh user,,,
[44:34] ID user _,,,
[44:38] ID as user uncore ID and finally we'll,,,
[44:42] have,,,
[44:48] history uh history is,,,
[44:55] history fine so this this is our uh app,,,
[44:59] API okay let me just save this fine and,,,
[45:02] let me just test this okay if everything,,,
[45:04] is working,,,
[45:11] fine all right so to test this so let me,,,
[45:15] just write on that,,,
[45:16] is,,,
[45:19] uon uh SRC within the SRC we have,,,
[45:23] API do app,,,
[45:29] hyphone hyphone reload okay let me run,,,
[45:41] this all right so it's working let me,,,
[45:43] just go and follow okay so route we have,,,
[45:47] not defined so slash,,,
[45:49] dos okay so here we got this uh two,,,
[45:54] things okay so one is uh two routes one,,,
[45:56] is the log water intake and the second,,,
[46:00] is history okay let's attach,,,
[46:05] this so let me just click onto this post,,,
[46:08] request try it out and here uh the user,,,
[46:11] ID let me just give some user ID like,,,
[46:15] user _ 1 23 okay and the water intake ml,,,
[46:20] I'll just give 2,000 right and let me,,
[46:22] click on execute,,,
[46:28] so here you can see I'm getting a,,,
[46:30] message so water intake logged,,,
[46:32] successfully and the analyz I'm getting,,,
[46:34] so your hydration status is good as you,,,
[46:36] have already,,,
[46:38] consumed uh 2,000 mL of water today and,,
[46:42] which is recommended dily intake for the,,,
[46:43] average adult okay so all the basic,,,
[46:45] information so even if I just go and,,,
[46:47] check it inside our database uh so that,,,
[46:50] is a water tracker. DB uh so,,,
[46:54] here okay uh so here uh we'll try to do,,,
[46:57] that from the front end okay so it's not,,,
[46:59] logged directly here okay fine so but I,,,
[47:02] can see the information that is uh I,,,
[47:04] need to just save that in the DB fine so,,,
[47:06] all right so this,,,
[47:07] uh route is working next is the history,,,
[47:11] let me just I need to add only the user,,,
[47:14] history now so already has conceived,,,
[47:16] 2,000 right so let me just type the same,,
[47:17] user that is user1 23,,,
[47:28] is it user1 23 yeah,,,
[47:39] user123 no search column called,,,
[47:44] user okay I made some mistake here can,,,
[47:47] you see so let me just cancel this out,,,
[47:48] contrl C let me just go to,,,
[47:55] app.py so s star okay I made some,,,
[47:58] mistake here database. py yeah you can,,,
[48:01] see it's user uncore ID sorry user,,,
[48:04] uncore,,,
[48:07] ID and save this contrl s and let me,,,
[48:10] just rerun,,,
[48:27] so if I just type this once again that,,,
[48:30] is uh,,,
[48:32] user123 again I'll add it here,,,
[48:35] 2,000 and let me just test this,,
[48:43] now okay so this is working so next is,,,
[48:47] history uh try this out and here is,,,
[48:51] user1 23 and,,,
[48:55] execute you yeah you can see because I,,,
[48:57] logged two to two times okay 2,000 2,000,
[49:00] I just wanted to verify that can see,,,
[49:02] user history so it's uh it's basically,,,
[49:04] able to track it right user ID is 1 2 3,,,
[49:06] and the history is uh 2000 ML and again,,,
[49:09] 2,000 ML and you can see the date as,,
[49:10] well right so it's absolutely working,,,
[49:13] fine all right so the next,,,
[49:16] um is let's add uh the front end part so,,,
[49:20] let me just name that as dashboard. py,,,
[49:27] uh here let me just go we'll add the,,,
[49:30] front end okay so let me just go and,,,
[49:32] create uh I'm just creating the outside,,,
[49:34] that is,,,
[49:41] dashboard dashboard,,,
[49:54] dopy fine so here uh so first of course,,,
[49:57] we need this okay let me just close this,,,
[49:58] server contrl,,,
[50:01] C so first let's import uh import,,,
[50:11] [Music],,,
[50:15] streamlet stream late as,,,
[50:19] St okay make sure you install this,,,
[50:21] streamlet uh I think we have installed,,,
[50:24] let me just verify that,,,
[50:38] so let me just do pip,,,
[50:50] install all right so here uh so first,,,
[50:53] install the streamlet as St,,,
[50:57] so next import uh,,,
[51:00] pandas as,,,
[51:04] PD then from pandas as,,,
[51:11] PD why it's taking,,,
[51:17] full all right so next from date,,,
[51:23] time uh import,,,
[51:27] uh date,,,
[51:30] time and from SRC do,,,
[51:35] agent uh import a water intake,,,
[51:40] agent and from SRC do database so this,,,
[51:44] is the place where you will be storing,,,
[51:46] directly from the UI okay so import log,,,
[51:49] intake as well as uh get history get,,,
[51:52] intake history,,,
[51:57] okay so initially first let's check if,,,
[51:59] the user has started tracking or not,,,
[52:01] okay so for that let me just add the if,,,
[52:03] condition so if uh tracker,,,
[52:08] started uh,,,
[52:11] started uh not in st.,,,
[52:17] session uh session,,,
[52:21] State uh session State then st. session,,,
[52:25] state do do tracker started equal set to,,,
[52:29] false okay here we are just checking,,,
[52:31] whether uh the user has started tracking,,,
[52:34] or not okay it's set to false all right,,,
[52:37] let me just save,,,
[52:40] this okay so here we need to have the,,,
[52:43] two section one is the uh just a welcome,,,
[52:46] section okay then we can have the uh,,,
[52:47] tracker dashboard so let's add the,,,
[52:50] welcome,,,
[52:51] session so here let me just write down,,,
[52:54] the comment,,,
[52:59] welcome,,,
[53:01] section directly we can't add the,,,
[53:03] tracker right so we can add some uh,,,
[53:05] headings here,,,
[53:06] okay so if not if not uh St do,,,
[53:14] session,,,
[53:16] state do tracker started okay so then,,,
[53:21] set the title so St do title and the,,,
[53:24] title I'll just give here welcome to AI,,,
[53:27] water,,,
[53:29] tracker welcome to uh AI water,,,
[53:36] tracker okay and even we can add some,,,
[53:38] markdown also like uh STD,,,
[53:44] dot,,,
[53:53] markdown so let me just write down like,,,
[53:56] track,,,
[53:58] track your uh daily,,,
[54:02] hydration daily,,,
[54:04] hydration with help of an AI,,,
[54:11] assistant assistant and log,,,
[54:16] your uh intake log your intake some def,,,
[54:21] some paragraph Okay so get our smart,,,
[54:25] feedback,,,
[54:28] and stay,,,
[54:30] hydrated stay healthy okay stay,,,
[54:35] healthy,,,
[54:47] effortlessly all right so here uh let me,,,
[54:49] just add the button inside this so if St,,,
[54:53] do,,,
[54:55] button like start the tracker okay so,,,
[54:57] this is the way we going to display the,,,
[54:58] tracker okay so ft FST do button so here,,,
[55:02] we're going to mention like start,,,
[55:06] tracking okay start,,,
[55:15] tracking so that is St do session,,,
[55:19] state do tracker started is set to true,,,
[55:23] now in it was false okay,,,
[55:26] uh true and uh St do,,,
[55:34] experimental experimental,,,
[55:38] rerun okay contrl s all right so this is,,,
[55:42] just a welcome section okay so here we,,,
[55:44] just added the basic information uh so,,,
[55:46] now let's try to add the tracker,,,
[55:48] dashboard so let me just uh have the,,,
[55:51] code for that okay instead of typing,,,
[55:56] so that will come under the else section,,,
[55:59] okay because right now we have just,,,
[56:01] started with this if condition so let's,,,
[56:02] try to add the else part,,,
[56:12] [Music],,,
[56:18] [Music],,,
[56:27] all right so here let me just paste,,,
[56:32] it make sure it's in the same level,,,
[56:38] okay okay so here,,,
[56:42] uh else okay so here so we are just uh,,,
[56:45] now we are running the dashboard okay,,,
[56:48] that is as soon as the button is clicked,,,
[56:49] okay so like start tracking so here we,,,
[56:51] have ai water tracker dashboard okay we,,,
[56:54] have the sidebar like information like,,,
[56:56] log your water intake so where we going,,,
[56:58] to ask the user to enter the user ID and,,,
[57:01] the intake ml okay so this will,,,
[57:02] basically keep on updating uh like how,,,
[57:05] much of water they taking it okay so,,,
[57:07] next once they are done with the summit,,,
[57:09] okay so here uh that information will be,,,
[57:11] logged that is xt. success and here you,,,
[57:15] can see we are just calling this uh,,,
[57:17] object okay there's a water intake agent,,,
[57:20] and we are just analyzing we are just,,,
[57:22] calling that moduel analyze intake and,,,
[57:24] we just giving the feedback okay okay,,,
[57:26] and here this is the History Section,,,
[57:28] okay this is all about the intake and,,,
[57:29] here we have the History Section so we,,,
[57:31] are just uh just getting the information,,,
[57:33] in uh and uh showing in the form of,,,
[57:35] Panda's data frame that's it okay let me,,,
[57:38] just run this and let's test this contrl,,,
[57:40] s the first uh is we need to uh run the,,,
[57:44] uh server,,,
[57:46] correct,,,
[57:48] and we need two,,,
[57:50] terminals let me open one more here,,,
[57:54] and do cond activ,,,
[58:03] wait going to activate this,,,
[58:07] environment okay in the first,,,
[58:09] environment let me just run this,,,
[58:16] uvon so make sure Run This Server before,,,
[58:18] running the streamlet app okay and let,,,
[58:20] me just go and test this once again,,,
[58:23] whether it's running docs okay so it's,,,
[58:25] there fine so so now let me just run the,,,
[58:26] streamlit app so let me go to the,,,
[58:28] another terminal and to run this,,,
[58:30] streamlit so I need to type stream lit,,,
[58:35] run dashboard. dashboard the name of the,,,
[58:38] file is,,,
[58:40] dashboard,,,
[58:46] dopy let me allow this,,,
[58:59] yeah so you can see so I'm getting a,,,
[59:00] welcome message that is welcome to AI,,,
[59:02] water tracker so track your daily,,,
[59:04] hydration with help of AI assistant lag,,,
[59:07] your sorry log your intake get smart,,,
[59:09] feedback and stay healthy that's what we,,,
[59:10] have added here on the top in case you,,,
[59:12] want to add some other information you,,,
[59:14] can just add it over here all right so,,,
[59:16] first let click on start tracking okay,,,
[59:18] so now we are getting into the dashboard,,,
[59:20] okay and here uh So based on the user ID,,,
[59:23] this is what we have so in case if I,,,
[59:26] just try to add another 500 mL and click,,,
[59:29] on submit so this is logging the,,,
[59:31] information okay so as soon as it's,,,
[59:32] being logged you can see I'll get a,,,
[59:33] current update can you see here so,,,
[59:35] earlier B in the in the API I updated,,,
[59:38] this uh 2,000 ml again I just updated,,
[59:41] 2,000 ml then again I have just updated,,
[59:43] on 500 this is what I'm getting it right,,,
[59:45] so in case if you're adding some new,,,
[59:47] user let me just add here Iman and here,,,
[59:49] let me just take 500 and submit okay now,,,
[59:52] a logged 500 mL for the Imran okay can,,,
[59:55] see uh so automatically it uh added that,,,
[59:59] uh water intake history and it's showing,,,
[60:01] already 500 mL and here uh uh I'm,,,
[60:05] getting the AI feedback that is based on,,,
[60:07] the average recommendation same story,,,
[60:09] here okay uh aim for 1.5 L okay so now,,,
[60:11] let me just add,,,
[60:14] 600 700 and click on submit so now again,,,
[60:18] I should see for the Imran it is 5,000,,
[60:20] sorry 500 plus 700 can you see and even,,,
[60:23] I can see the chart over here,,,
[60:29] okay so if you want to add some other,,,
[60:31] user like uh test one 700 Summit so it,,,
[60:36] will be logged 700 for test one and same,,,
[60:40] information you can just track over here,,,
[60:42] all right so here let me just go here,,,
[60:44] and if I just go to my water tracker. DB,,,
[60:47] water intake and see all the users as,,,
[60:51] well as whatever I'm just adding over,,,
[60:53] there okay I'm able to see that here,,,
[60:56] okay so yes so this is absolutely,,,
[60:58] working fine so I hope you have,,,
[61:01] understood and uh you have enjoyed it,,,
[61:03] building this uh project okay so this is,,,
[61:07] a simple project okay so where we have,,,
[61:09] just understood the usage of how the,,,
[61:11] things are working in terms of uh,,,
[61:14] writing the code okay the flow okay you,,,
[61:16] can just take up this to Next Level by,,,
[61:18] adding some uh features like uh sending,,,
[61:20] an alert message okay and all those,,,
[61:22] things uh so yes keep learning keep,,,
[61:25] growing okay so all the best so see you,,,
[61:27] soon in the next new project,,,
